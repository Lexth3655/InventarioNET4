<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>